---
import '../styles/global.css';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import Menu from '../components/Menu.astro';
import Seo from '../components/Seo.astro';
import { clientTranslations } from '../i18n/';

const { title, description = "", pattern = true, image, altIMG } = Astro.props;

const cookieTheme = Astro.locals.theme;
const actDescription = description === "" ? clientTranslations[Astro.locals.lang].common.description : description;
---

<!DOCTYPE html>
<html lang={Astro.locals.lang}>
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="icon" type="image/svg+xml" href="/images/logo.webp" />
        <Seo title={title} description={actDescription} image={image} altIMG={altIMG} lang={Astro.props.lang} />
        <title>{title} | Divulgando Ciencia Lab</title>
        <script src="https://unpkg.com/function-plot/dist/function-plot.js"></script>
        <script is:inline define:vars={{cookieTheme}}>
            const THEME_KEY = "theme";
            const DARK_CLASS = "dark";
            const LIGHT_CLASS = "light";
            const getThemePreference = () => {
                if (cookieTheme !== '') { return cookieTheme; }
                if (typeof localStorage !== "undefined") { return localStorage.getItem(THEME_KEY); }
                return window.matchMedia("(prefers-color-scheme: dark)").matches ? DARK_CLASS : LIGHT_CLASS; };
            const isDark = getThemePreference() === DARK_CLASS;

            document.documentElement.classList[isDark ? "add" : "remove"](DARK_CLASS);

            if (typeof localStorage !== "undefined") {
                // Watch the document element and persist user preference when it changes.
                const observer = new MutationObserver(() => {
                    const isDark = document.documentElement.classList.contains(DARK_CLASS);
                    localStorage.setItem(THEME_KEY, isDark ? DARK_CLASS : LIGHT_CLASS);
                });
                observer.observe(document.documentElement, {
                    attributes: true,
                    attributeFilter: ["class"],
                });
            }
        </script>
    </head>
    <body class="flex min-h-screen flex-col relative">
        <Menu />
        <div class={"fixed top-0 left-0 inset-0 science-pattern -z-10 " + (pattern ? "" : "hidden")}></div>
        
        <Header />
        
        <main class="flex-1">
            <slot />
        </main>
        
        <Footer />
    </body>
</html>