<section class="font-generalsans-medium flex h-full my-auto items-center w-full justify-center text-principal-black dark:text-principal-white">
    <span id="horas">00</span>
    :
    <span id="minutos">00</span>
    :
    <span id="segundos">00</span>
</section>

<script>
    async function initializeClock() {
        const horas = document.getElementById("horas");
        const minutos = document.getElementById("minutos");
        const segundos = document.getElementById("segundos");

        function updateClockLocal() {
            const now = new Date();
            horas.textContent = now.getHours().toString().padStart(2, "0");
            minutos.textContent = now.getMinutes().toString().padStart(2, "0");
            segundos.textContent = now.getSeconds().toString().padStart(2, "0");
        }

        updateClockLocal();

        try {
            const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;
            const response = await fetch(`https://timeapi.io/api/time/current/zone?timeZone=${timeZone}`);
            if (!response.ok) throw new Error("Error al obtener la hora.");

            const data = await response.json();

            const initialDate = new Date(data.dateTime); // Usamos 'dateTime' aquí
            if (isNaN(initialDate)) throw new Error("Fecha inicial inválida");

            const initialLocalDate = Date.now();

            function updateClock() {
                const now = new Date(initialDate.getTime() + (Date.now() - initialLocalDate));
                horas.textContent = now.getHours().toString().padStart(2, "0");
                minutos.textContent = now.getMinutes().toString().padStart(2, "0");
                segundos.textContent = now.getSeconds().toString().padStart(2, "0");
            }

            setInterval(updateClock, 1000);
            updateClock();
        } catch (error) {
            console.error("Error:", error);

            function fallbackClock() {
                const now = new Date();
                horas.textContent = now.getHours().toString().padStart(2, "0");
                minutos.textContent = now.getMinutes().toString().padStart(2, "0");
                segundos.textContent = now.getSeconds().toString().padStart(2, "0");
            }

            setInterval(fallbackClock, 1000);
            fallbackClock();
        }
    }

    initializeClock();
</script>
